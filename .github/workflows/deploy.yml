name: CI/CD Docker

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      DOCKER_IMAGE_NAME: ${{ steps.set_image_name.outputs.DOCKER_IMAGE_NAME }}
      DOCKER_IMAGE_TAG: ${{ steps.set_image_name.outputs.DOCKER_IMAGE_TAG }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set lower-case image name and tag
        id: set_image_name
        run: |
          IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "DOCKER_IMAGE_TAG=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ steps.set_image_name.outputs.DOCKER_IMAGE_NAME }}:${{ steps.set_image_name.outputs.DOCKER_IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export PATH=$PATH:/usr/bin:/usr/local/bin
            APP_DIR=~/app
            REPO_URL=${{ github.event.repository.html_url }}

            mkdir -p $APP_DIR
            cd $APP_DIR

            if [ ! -f docker-compose.yml ]; then
              echo "docker-compose.yml not found. Downloading from repository..."
              curl -L -o docker-compose.yml $REPO_URL/raw/main/docker-compose.yml
            fi
            
            echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            export DOCKER_IMAGE_NAME=ghcr.io/${{ needs.build-and-push.outputs.DOCKER_IMAGE_NAME }}
            export DOCKER_IMAGE_TAG=${{ needs.build-and-push.outputs.DOCKER_IMAGE_TAG }}

            docker-compose pull
            docker-compose up -d
